<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>从搬家到入职</title>
    <url>/2022/09/18/%E4%BB%8E%E6%90%AC%E5%AE%B6%E5%88%B0%E5%85%A5%E8%81%8C/</url>
    <content><![CDATA[<p>从6月29毕设答辩结束，开始找房子。最开始想找单人的公寓，但是发现确实太贵了，于是又找合租，联系了很多人。到7月26号终于跟一个私人房东谈好了一个两室一厅的房子。</p>
<span id="more"></span>
<p>记得七月还去找了驾校，最后我觉得在比利时要想用英语考驾照，还不如先学荷兰语，然后用荷兰语去考理论考试。</p>
<p>在存押金的时候还有个小插曲。我在ING银行开的账户，所以想先去ING办押账户，可是ING的电话一直没人接，我就没法预约去办。然后我又预约了KBC的，一共去了两次，第一次去申请，第二次去开户。</p>
<p>第二次去的时候，银行柜员说因为是合租所以必须两个人一起签字，说是法律要求。可是室友要到九月才到比利时，所以只能放弃在银行办了。既然是这样最开始申请的时候就应该跟我说啊。</p>
<p>还好同学JF之前跟我提过政府有个平台可以自助开押金账户，在这个平台上开户就没啥问题，虽然也要填租户，但是只填一个人也行。</p>
<p>八月初结束了给professor做项目的student
job。八月十五号拿到了新租的房子的钥匙，然后就开始搬家。在这期间也抽空同学出去玩，安特卫普、列日、鹿特丹、根特、Ypres。搬家和旅行，都很累。毕竟是最后的暑假了，还是想出去逛一逛。</p>
<p>因为新家和原来的地方离得比较近，我也没有车，所以就选择自己一点点搬过去。大都是用两个行李箱拖过去，把东西拿出来，然后再回旧家装行李箱。到搬家的最后三天，每天白天在新家等快递，装家具，晚上去旧家打扫卫生，感觉就像在打工。</p>
<p>在买家具装家具的过程中还碰到了一些麻烦。最开始是准备全部家具都在宜家网站上买，然而在结账的时候，网站才提示我的床和室友的衣柜都不能送到新家的地址。我选的床还是宜家上能买到的最便宜的。想到之前在2dehands的网站上看到过一个卖家具的网站VidaXL的广告，于是去那上面看了看。</p>
<p>我们在VidaXL上买了布衣柜和床。送过来床的包裹倒是比宜家的家具包裹要小很多，但是重还是一样的重。接下来才是灾难，我买的90cm宽的床，装了好几天，然后发现缺了零件，还需要电钻钻孔。跟我爸打电话然他看了看，我们都觉得质量不咋样，还是退了比较好。我先装好了一个布衣柜，觉得不太稳。而且每次开关还要弯腰上下拉拉链，对腰不好的我来说实在是不友好。最后我在VidaXL上买的东西就都退了，但是室友决定都留下来。</p>
<p>说来也巧，我刚刚拿到新家的钥匙的那天下午，碰到对门邻居，也是中国人。而且他们也要搬家了，有些家具要处理掉，我就直接从他们那里接手了沙发，餐桌，和客厅的柜子。</p>
<p>住了一段时间之后就发现房间里的WiFi信号不太行。因为入户的网线在客厅最靠外面，路由器也在那，正好是离房间距离最远的。对门家男主人告诉我Telenet可以提供一个免费的WiFi
Booster，于是第二天我就去Telenet店里问了。Telenet最近店里人挺多，排了好一会队，结果店员说他们店里现在也没有，还是得邮寄，要5欧的运费。还不如我直接在Telenet的app上下订单，来店子里就因为不想交这5块钱运费。</p>
<p>接着就到了CLT第一次荷兰语课的日子。比起刚刚来到比利时的第一学期上ILT的荷兰语课，还是CLT的更实用，而且班级也不大，总共大概20个学生，各种各样的人都有。</p>
<p>九月十三号的时候收到了公司的邮件，通知我Single
Permit通过了，最早第二天就能上班，问我啥时候去。我自然是回答第二天就能去，已经呆在家里太久了。从六月22号到九月13号，花了将近三个月的时间，算是正常的时间。</p>
<p>以后有时间再写写从学生成为正式的打工人的感想吧。</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
  </entry>
  <entry>
    <title>博客终于搭起来了</title>
    <url>/2022/08/06/%E5%8D%9A%E5%AE%A2%E7%BB%88%E4%BA%8E%E6%90%AD%E8%B5%B7%E6%9D%A5%E4%BA%86/</url>
    <content><![CDATA[<p>刚想码字，才发现自己用的NexT主题是旧版本，还奇怪为什么7k+
star的项目为什么文档都不全。 <span id="more"></span>
建这个博客的目的是记录生活和折腾的技术，算是一个比较正式？的个人网站，也想加上GitHub和LinkedIn的链接。</p>
<p>昨天晚上找了一整晚的主题，但是没有找到满意的。Hexo官网的theme列表里有很多展示页面都失效了，也有很多很久没有维护了，不过最主要的还是项目没有很好的文档让人容易上手。以前也用过一个二次元的主题，昨天晚上也找到了另一个，不过可能是人老了，想弄个简洁一点的，不想每篇文章都来个二次元图封面。</p>
<p>今天早上起来准备用昨天发现的主题凑合，顺手搜了一下自己star的的项目，突然看到自己以前star了一个Hexo主题NexT。好家伙，这不正好是我想要的，可是为什么这个7k+
star的项目文档只有一页，也没有详细讲怎么配置主题。自己摸索了一下，大概搞懂怎么配置了。但是因为要动主题的config文件，考虑到以后主题可能还要更新，就先fork了一下，然后自己新建了个branch做修改。虽然麻烦但是也学到了fork的项目怎么跟源项目同步，还学了下把主题项目变成了博客项目的submodule。</p>
<p>但是还是觉得很奇怪为什么昨天晚上没在Hexo官网的theme列表里看到NexT主题，热度这么高不应该没有啊。一搜名字还真有，而且跟我用的还不是同一个项目。到Issue里看了下“必读”才发现原来我用的是旧版，现在看的这个是最新版的，而且配置方法也跟原来不一样了，看来又要重新弄主题了。但是这俩长得也太像了，好歹在旧版也提示一下嘛。
- 新版：https://github.com/next-theme/hexo-theme-next -
旧版：https://github.com/theme-next/hexo-theme-next</p>
<p>不过现在的博客也还没完全配置好，比如之后要写带图片的文章，还要配置一下assets。评论工具也还没有设置。总之慢慢来吧。</p>
<p>上面也提到自己以前也用过GitHub搭过博客，不过都不长久。具体的时间已经记不清了，不过在本科的时候应该是第一次，可能是在上软工课的时候产生的想法？第二次应该是硕士第一年为了找工作能写在简历上？虽然最后都因为学习很忙不了了之。除了GitHub还用过CSDN的博客记了一点东西，不过没啥太大的价值，虽然大三暑假找实习的时候也确实写进简历里了（应该庆幸没有细问我hhh)。</p>
<p>之前用Hexo，都很心急，文档也没有好好看过，也没有耐心去解决配置过过程中遇到的问题。现在至少能耐下性子看文档了，遇到问题也有时间去想办法解决。这次应该会长久一些吧，还是不立flag了。但是学生生涯大概终于是要结束了，给毕设professor打工的内容也基本做完了，下周开始就是我最后的暑假。是得好好休息一下，已经两年没有休过将近一个月的假期了。</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
  </entry>
  <entry>
    <title>欧洲硕士申请经历</title>
    <url>/2020/08/30/%E6%AC%A7%E6%B4%B2%E7%A1%95%E5%A3%AB%E7%94%B3%E8%AF%B7%E7%BB%8F%E5%8E%86/</url>
    <content><![CDATA[<p>这几篇文章原本是发在B站的，在知乎专栏也备份了，当时B站正好在搞暑期专栏的活动，写了还有点钱拿。虽然最后也就几块钱，但是至少给了我一点点写这几篇总结的动力。后来清B站动态的时候把B站的专栏也删了。现在这些文章已经过了有些时间了，内容也仅供大家参考。</p>
<span id="more"></span>
<h1 id="篇一-欧洲大陆及北欧留学-计算机科学硕士申请经历">篇一
欧洲大陆及北欧留学 计算机科学硕士申请经历</h1>
<p>想着事情办得差不多了就总结一下申请经历的，b站现在正好有暑期活动，那就试试b站专栏吧。这一片会是背景+简介（画大饼），之后会分几篇细讲。</p>
<p>出国留学大概是我一直以来为数不多的执念吧，若不是如此，很可能就经受不住诱惑选保研了。四年前高考成绩大概能上个末流985，也过了大连理工的自主招生，最后来到了双非野鸡南科大。</p>
<p>为什么要申请欧洲（不包括英国，下同）呢，主要是因为自己太菜，想着避免跟大佬们竞争北美申请，英联邦国家学费也有点贵，然后偶然听到学长分享欧洲申请经验成为我申请欧洲的契机。</p>
<p>首先说一下语言问题。欧洲也是有很多英文硕士项目的，并不一定需要小语种成绩。另外雅思和托福都是可以的，并不存在哪个比哪个更好，不过可能考到同样等级的分数难度不同？部分学校也会要求GRE成绩。可能有同学会问要考多少分才够，这个真的是看各个学校的要求，如果你目标学校很明确，那就以学校的要求为目标，如果是跟我一样比较佛系的同学，可以先把目标订到一个不会因为语言方面吃亏的成绩，比如托福100+，GRE
325。</p>
<p>英语当然是越早考越好，但是托福现在只有两年有效期，所以最好是在大二暑假或者大三寒假考托福，大三暑我们就要实习，不知道其他学校是否也是类似的安排。GRE有五年有效期，可以更早考。</p>
<p>时间线大概就是从现在这个时候，大四上学期开始准备申请材料，如简历、动机信会在这个过程中反复修改，还要联系好老师写推荐信，大概十月十一月就可以递交申请材料了。像荷兰出结果比较早的，年底就出录取结果了；德国是比较晚的，有的学校会到第二年七八月份。</p>
<p>我申请的学校所在的国家包括荷兰、比利时、德国、瑞士、丹麦、瑞典。本来准备主申德国（因为不要学费），也找了留学中介，后来变成中介帮忙申请荷兰、德国、瑞士了。德国学校官网实在是劝退国际生，很多英文页面都不完整，很多重要文件只有德语，确实需要中介帮帮忙。德国还有比较麻烦的一点就是需要APS（留德人员审核部）审核，这个后面再说。总的来说德国自己申请的话有点麻烦。相比之下瑞士和荷兰要好很多，所有信息在官网上都能找到英文版的。</p>
<p>北欧的丹麦瑞典，申请操作都不复杂，英文支持很好，完全可以自己搞定。瑞典有个申请系统，可以填四个志愿，不过一般申请某学校奖学金都要求把那所学校设置第一志愿。比利时是我最后才申请的，本来没想着要去的，结果最后去了比利时，比利时同样也要APS。</p>
<p>以上内容仅为个人经验，仅供参考，欢迎批评指正。下一篇应该会是讲申请材料的准备，比如简历、课程描述（课程简介）、推荐信、动机信……</p>
<h1 id="篇二-欧洲大陆及北欧留学-计算机科学硕士申请经历申请材料篇">篇二
欧洲大陆及北欧留学 计算机科学硕士申请经历——申请材料篇</h1>
<p>具体而言，我申请了荷兰的University of Twente，VU
Amsterdam，德国的University of Stuttgart，RWTH
Aachen，瑞士的ETHz和EPFL，丹麦的University of Copenhagen，瑞典的Chalmers
University of Technology，Uppsala
University（虽然瑞典可以填四个不过后面两个基本不用看了），以及比利时的KU
Leuven。除了瑞士的两所学校太难了，没有被录取；其他学校（瑞典录取第一志愿也就是Chalmers，之后的志愿就不会被录取了）都录取了，然而并没有拿到任何一所学校奖学金。</p>
<p>如果没有奖学金，那么我考虑的就只有德国和比利时的学校了，德国除了巴登符腾堡州的学校收学费，其他州都不收学费，斯图加特大学（University
of
Stuttgart）正好在巴符州。但是收学费也不高，一年3000欧元；其次是比利时的荷语区鲁汶大学（KU
Leuven），我的专业学费是6000欧元一年，是的，不同专业学费不一样。</p>
<p>虽然亚琛工大（RWTH
Aachen）录取了，但是我的GRE写作没有达到录取要求，而我又不想再考，也就作罢。就在我接受斯图加特大学的录取之后没多久，鲁汶就给我发邮件说给我免去第一学年的部分学费，只用交不到1000欧，于是最后决定去鲁汶。当然这里我的情况是德国和比利时都要APS，我最初是申请的德国的APS审核，最后转换成了比利时的APS程序，这个放到APS那篇细说吧。</p>
<p>根据我申请的经历，不同学校要求的材料大同小异，具体的要求可以去学校官网查找，这里我列出我在申请时都要用到的材料：
简历，成绩单，在读证明，课程简介（课程描述），动机信，推荐信。</p>
<h2 id="简历">简历</h2>
<p>有的学校材料要求比较细致，比如简历上教育经历要从高中开始写起、时间顺序按照从近到远。我是从网上找的latex模板做的简历，很简洁</p>
<figure>
<img src="1659965770148.png" alt="简历" />
<figcaption aria-hidden="true">简历</figcaption>
</figure>
<p>我没做过什么好的项目，也没有什么好的实习经历，让大家见笑了。不要怕，往上写就完事儿了，大部分人不都是普普通通的嘛，我甚至把一些课程project都写上去了。</p>
<h2 id="成绩单在读证明课程描述">成绩单、在读证明、课程描述</h2>
<p>成绩单和在读证明都由学校开具，我们学校比较好的就是这两个盖章的中英文文件都能直接在机器上打印出来。难的是课程描述，学校虽然有给，但是一堆pdf，我还得从里边找到我成绩单上的课，一个个复制出来，虽然给了英文版，但是那翻译质量实在是太差。在找学校相关部门盖章的时候，也出了些小问题，学校说只能盖章一次，但是我申请不同的学校对课程描述的要求是不一样的，最后通过系里盖章才解决（但是因为我改过一些课程描述的英文，系秘书还问我为什么跟学校给的不太一样）。</p>
<h2 id="动机信">动机信</h2>
<p>动机信花了我很长时间，写写改改，虽然给不同学校的动机信不一样，但是一旦第一篇写下来了，后面就比较顺了。我们学校另一个比较好的地方是语言中心可以免费辅导修改文书，外教和其他老师给了我很多修改建议。在拿去给老师看之前自己先用Grammarly这种语法检查工具自查一下。怎么写动机信呢，这方面德国学术交流中心（DAAD）可以说是很贴心了，我在网上搜到了他们的一篇指导写动机信的文章
(http://ic.daad.de/imperia/md/content/islamabad/letter_of_motivation.pdf)
比如问自己一些问题——自己的专业目标是什么？以你的所学所知，将来准备如何为社会、国家做出贡献？为什么要选这个学校和这个项目？为什么你是这个项目合适的人选？等等。</p>
<h2 id="推荐信">推荐信</h2>
<p>找谁给我写推荐信，当时可难了我一阵，虽然前辈们都说过要今早跟老师多打交道，但是不到时候是认识不到重要性的。最后我勉强凑到了三位老师，两位是指导过我做创新实验的，还有一位名义上是我的书院导师，实际上平时不会怎么打交道（因人而异，有的书院导师经常和他们的学生见面）。虽然是找老师给我写推荐信，实际上都是我自己写然后让他们签个名。所以怎么写呢？</p>
<p>实事求是地夸，不要写负面内容。什么某某是我见过的最优秀的学生之一这种话就不要了（如果是真的那当我没说），我的套路就是做过什么事，体现了什么品质，这些事一定是你做过的，一定是老师可以知道的。比如我在选某导师做创新实验，做项目时遇到了什么问题，如何解决问题，体现了我什么样的能力和品质；如果只是上过某老师的课，我就写我在实验课上做过什么，课程project做得怎么样之类的。</p>
<p>这也要感谢一下书院导师，当时找他写推荐信的时候，他就很明确的跟我说了，你们写的时候，要考虑一下老师的视角，他能知道你哪些方面，不可能知道你哪些方面，这样写出来才比较真实。</p>
<h2 id="ending">Ending</h2>
<p>那么这篇就写到这里，下一篇大概是介绍一下APS。</p>
<h1 id="篇三-德国比利时计算机硕士申请经历aps篇">篇三
德国/比利时计算机硕士申请经历——APS篇</h1>
<p>先给出APS官网 https://www.aps.org.cn
，所有重要信息都可以在网站找到。</p>
<p>申请德国和德国周边的几个国家——比利时、奥地利、瑞士，都可能需要APS审核。APS审核简单来说就是考察你是不是真的学到了你修读专业的相关知识，帮德国那边的高校先筛选一下。所以平时在学校扎实学习的话APS审核并不难，但是需要复习。</p>
<p>APS审核首先是审核你提交的个人信息等材料，之后会通知何时去面谈，大都是去北京，上海也有。面谈也有两步，笔试和面试。从提交材料到面谈，我大概等了一个半月。我是去年7月8日注册的审核部账户，7月19号审核部提醒要补交材料，7月22号通知我在8月12日早上八点去审核部面谈。据中介说我这个速度算是很快了。</p>
<figure>
<img src="1659968357452.png" alt="面谈通知" />
<figcaption aria-hidden="true">面谈通知</figcaption>
</figure>
<p>不能改时间，╮(╯▽╰)╭</p>
<p>到了审核部，会先让你在候考室等，填回寄的快递单，等工作人员叫你的名字。笔试大概十多分钟，我当时只有一道题，因为有规定我不能透露题目，题目是开放式的讨论。然后面试官会带你去面试的房间，和你做的题目一起，面试也会问笔试的内容。</p>
<p>我面试的时候，面试官是一位年轻人和一位老教授，年轻人负责记录，主要是老教授和我互动。面试的时候摆出了我的成绩单，主要考察内容是我近两个学期学的专业课，不过是对方认为的专业课。比如我在那个学期选了电路基础，虽然也算是我们专业选修课，但是这很明显跟计算机隔得很远，我又正好没有怎么准备，结果他问到了，很尴尬，没说出什么东西来。</p>
<p>那么要怎么准备APS面谈呢？首先把成绩单拿出来，把专业相关课程拎出来，做两个文档:一个是用一段话讲一门课学了哪些内容，另一个是列出每门课重要的知识点，最好能举出应用的例子；如果有实验课，也要准备讲实验课做了什么。之所以要联系实际，是因为这个考察并不是考你死记硬背的能力，人家官网也说了：</p>
<figure>
<img src="1659968435885.png" alt="小提示" />
<figcaption aria-hidden="true">小提示</figcaption>
</figure>
<p>当然不要随便扯，扯到你自己也不太熟的东西，面试官再往下问就GG了。准备的这两个文档就是对应提示里面的要求，所以在面试之前熟记它们，能够流利清楚的表达出来就OK。</p>
<p>之前的文章也提到过，我开始申请的是德国的APS证书，后来转成了比利时的。其实我原本也不知道这个能不能转换。首先问了学校，第一次给我答复是学校可以帮忙办转换，第二次却又说要我问本地的审核部。于是我又发邮件问北京的审核部。因为没有收到回复，我连续几天发邮件给他们，在第五天的时候才终于收到回复了，说可以转换，要多交500RMB费用，但是要等我拿到毕业证学位证——因为我之前办的是六个学期的APS证书，现在我的状态当然已经不是六个学期了，所以就直接连着补审一起办了。</p>
<p>荷语区鲁汶是在荷语区，如果是法语区的情况可能就不一样了，总之发邮件问审核部，如果不回信就多发几封。</p>
<p>下一篇可能大概是办签证的过程？</p>
<h1 id="篇四-比利时硕士留学申请经历签证申请篇">篇四
比利时硕士留学申请经历——签证申请篇</h1>
<p>回家大概有两个月了，竟然就已经忘了具体哪天从学校回来了。翻了翻火车票，没找到，最后在支付宝账单的公交车支付记录查到是7月8号回家，然后才想起那天火车晚点七个小时；那段时间水灾严重，本来早上四五点就应该到了，列车慢慢悠悠晃到中午才到武汉。</p>
<p>比利时留学的签证申请还分是公立学校还是私立学校，分别对应有不同的条款，我即将去的学校KU
Leuven是公立大学，所以这里的经验也只适用于公立学校。比利时签证申请在国内是由VFS签证中心办理，详细的信息都可以在VFS网站
(https://www.vfsglobal.cn/Belgium/China/Chinese/study.html)
上查到，比如申请公立大学要提交的材料：https://www.vfsglobal.cn/Belgium/China/Chinese/pdf/student-art-fifty-eight-cn.pdf
。要注意这些资料随时都可能发生变化，在我准备的过程中就看到这个文档变过一次了。</p>
<p>下面就说一下我觉得比较重要的几个材料：体检证明、无犯罪记录、资金证明。</p>
<p>我发过邮件问签证中心，体检只能去指定医疗机构（具体哪些在上面链接的文档里有提及），都是些私立机构，收费自然有点贵。更坑的是武汉没有指定的机构，还好深圳有。我这是第一次去私立医疗机构，先打电话过去预约，接电话的工作人员上来就是英语，我完全没有心理准备，直接就懵了，磕磕巴巴半天没说出啥来，然后工作人员问了句：可以用中文吗？</p>
<p>我在6月30号去体检，收了720；三个工作日之内拿到结果，可以邮寄到付，我就直接填了家里的地址。体检不用空腹，拍了胸片，抽了一管血；最后看到结果，原来是测了艾滋病和梅毒。体检报告上面中英文都有，拿到是可以直接用的，不用再办翻译公证。有一说一，不愧是私立医疗机构，环境和服务真的好。</p>
<p>无犯罪记录，需要双认证——除了要翻译公证，还要我们国家的外交部和比利时大使馆的认证。所以材料会寄到北京，整个过程大概一个月。根据我之前在网上查到的信息，各地办理流程好像稍微有点区别。</p>
<p>我是先到我家附近的公证处拿了一个申请函件，然后到公安局去办证明，也就是填函件上的信息和盖章。在公安局发生了点小插曲，民警说格式要按照他们的来，商量了半天才同意按照公证处给的格式，但是要我们先自己打印好那个模板。因为公证处给的函件上面有抬头，公证处特地划掉了，就是想让公安局出具没有抬头的，比利时无犯罪记录认证要求<strong>不能有抬头</strong>。</p>
<figure>
<img src="1659969414553.jpg" alt="picture 4" />
<figcaption aria-hidden="true">picture 4</figcaption>
</figure>
<p>也就是我回家当天，即使是经过了一晚上加一早上的卧铺，还是当天就去公证处办了。7月8号提交，8月7号才收到，还真的就花了一个月。在这期间我还把德国的APS证书补审加转换成比利时荷语区的APS证书，申请了学校的资金证明。</p>
<p>KU
Leuven学校比较大，提供资金证明的服务，我只需要打九千多欧元钱到学校指定账户，过几天学校就发了一份资金证明pdf到我邮箱，顺便告知我录取通知和资金证明都已经发给了比利时驻华大使馆。但是我也看到群里有人说他们学校没有这个服务，只能通过担保人这种方式提供资金证明，金额要求好像比较高。</p>
<p>拿到无犯罪记录的双认证，APS转换做好，其他材料也准备好了，终于可以去签证中心办签证了。然而武汉本来有签证中心，因为疫情关闭之后就一直没开，我只能去最近的长沙签证中心。同样也是电话预约，8月12日上午去提交材料，为了剩下一晚上的住宿费，我坐凌晨一点半左右的火车去长沙，将近凌晨五点到，然后一直等到早上九点签证中心开门。</p>
<p>下签证倒是挺快，8月22日就收到了签证，一起的还有退回的各种材料一份。</p>
<p>下一篇大概是一些感想和鸡汤？</p>
<h1 id="篇五-欧洲硕士留学申请经历感想与后记">篇五
欧洲硕士留学申请经历——感想与后记</h1>
<p>出国留学的准备是从很早就开始了，最初是打算先参加本校与国外学校学期交流项目，所以在大二寒假就考了第一次托福，因为英语底子还不错第一次就考了100。后来仔细看了合作项目的课程，发现专业课的学期安排和我们学校有些冲突，这条路就没有再继续。</p>
<p>大一下的时候想试试生物，后来又因为对这类专业未来职业发展不太好的言论和不喜欢繁琐的实验记录而退坑，转而跳进了更大的计算机坑；但并不完全因为“计算机好找工作”，而且实际情况是只有当你要找工作的时候就知道并不好找，还因为自己以前就很喜欢折腾软硬件，和对人工智能和自动化的憧憬。</p>
<p>现在看来，可能去做数码产品的评测更适合我，我只不过是喜欢折腾新鲜玩意儿，也就是组合和使用，我并不关心它们怎么被制造出来。从大二开始，学了越来越多计算机知识，在各门课作业中穿梭，也越来越麻木。直到大三要找暑期实习，才发现简直是糟透了。</p>
<p>大三那段时间很焦虑。第一个创新实验做得不顺利，觉得老师和队友都不行，于是换了导师和课题，结果碰上了更坑的队友。当然如果我自己很nb就没有这么多问题了。更因为之前都只是关注成绩和留学申请，根本没想过暑期实习，也完全没有准备，面一个挂一个，搞得整个人精神状态很差。也就是在这种情况下，大三快结束的时候，去找了中介帮忙参考。</p>
<p>有一说一，如果不是因为整个大三混乱的状态，中介是可以省掉的，但是当时实在是力不从心。大四寒假回家，因为疫情被困在家里四个多月，更让我幡然醒悟，在我这种家庭不和睦的环境，本应该优先考虑如何经济独立。可惜大学离家很远，距离让我可以逃避很多烦心事。而另一个让我忽略了优先目标的，大概是大学的气氛——盲目吹捧本科生就进实验室磕盐的气氛；搞得我一度以为自己也应该早早找好导师，进实验室打杂，做实验，发paper；实在是too
young too simple, sometimes naive。</p>
<p>但是以前常常把现在一些窘境归因于过去的自己没有明确目标，也就谈不上规划，现在看来，只是被这大学四年消磨掉了憧憬和热情。并不是给自己的佛系状态找借口，只是在这样有着充分选择自由的大学和又不太自由的家庭两种环境之间，没有谁能够指引前进的方向却又循规蹈矩地度过了这四年。更糟糕的还有这四年慢慢形成的惰性，虽然这种情况我和同学经常互相吐槽。</p>
<p>现在的我大概处于接受事实并且为提高专业水平而努力的状态，转别的专业成本太高，我也并不讨厌写代码。但是实在是觉得自己实践太少，读完了计算机本科，也写不出个像样的软件。不过毕竟不是培训班，可以说这也正常，全靠自己课外花时间了，奈何那时候心里也放不下课程，时间安排也不太行。总之，向前看吧。</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
  </entry>
  <entry>
    <title>C++ Virtual Keyword and Confusion of a Reference Creation Expression</title>
    <url>/2022/09/19/C-Virtual-Keyword-and-Confusion-of-a-Reference-Creation-Expression/</url>
    <content><![CDATA[<p>For the first week I started my job, I mainly review C++ apart from
those administration matters. There are some tutorials inside company
wiki. When I review the <code>virtual</code> feature of C++, my brain is
a little bit of mess. Also, I meet a confusing expression related with
reference. Therefore, after I figure out what happened exactly, I decide
to write these things for a backup of my memory.</p>
<span id="more"></span>
<h2 id="update">2023-07-23 Update</h2>
<p>前段时间因为试着找国内的工作，看了下C++的面经，正好巩固了些基础知识。当然这十个月的工作中也学了一些C++。现在回过头来看当时的疑惑，其实也就是些基础知识，但是因为没有系统性学C++，所以那时候查起来也有困难。</p>
<p>现在也能给当时的疑惑一个简单的解答了。AClass&amp;
a(anotherObject)，只不过是一种初始化方式，也就是下面的第二种，只不过是初始化一个reference而不是普通的variable：
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">a</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="type">int</span> a&#123;<span class="number">1</span>&#125;;</span><br></pre></td></tr></table></figure></p>
<p><code>virtual</code>关键字用来C++实现动态多态。derived
class可以override在base class里使用了virtual关键字的方法。当使用base
class的指针指向一个derived class的实例，就可以调用derived
class里被override的方法了。</p>
<p>virtual特性的一种实现是（大多数编译器也是这么做的）：每一个derived
class要维护一个virtual table，virtual
table里有指向virtual函数的指针。base class有一个virtual table
pointer的属性，指向virtual table。到了调用virtual函数的时候，就从virtual
table里找对应的函数指针。</p>
<p>至于virtual table pointer指向哪个地址，我没有深究，但是猜测是derived
class在初始化的时候会给base class的virtual table
pointer初始化值，指向自己的virtual table。</p>
<h2 id="conclusion">Conclusion</h2>
<p>When not use <code>virtual</code> to try to override a method
(<code>getClassName</code>) in the derived class, as case 2, the pointer
<code>p2base</code> of <strong>parent</strong> class type
(<code>CMyClass</code>) call the method from <strong>its own
class</strong>, NOT the child's (<code>CMyDerivedClass</code>) method,
although <strong>the pointer points to a child class
object</strong>.</p>
<p>After add <code>virtual</code> keyword to the method, the
<code>p2base</code> object pointer calls the child's method. As case 1,
this behavior is intuitive as we expect.</p>
<h2 id="case-1-virtual-keyword-before-the-methods.">Case 1:
<code>virtual</code> keyword before the methods.</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// the parent class</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CMyClass</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">// some methods</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> string <span class="title">getClassName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;CMyClass&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// the child class</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CMyDerivedClass</span> : <span class="keyword">public</span> CMyClass &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> string <span class="title">getClassName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;CMyDerivedClass&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CMyDerivedClass child;</span><br><span class="line">    </span><br><span class="line">    CMyClass* p2base = &amp;child;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;get class name from parent pointer to child.&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; p2base-&gt;<span class="built_in">getClassName</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    CMyDerivedClass* pchild = &amp;child;</span><br><span class="line"></span><br><span class="line">    <span class="function">CMyDerivedClass <span class="title">lv_Test3</span><span class="params">(*pchild)</span></span>;</span><br><span class="line">    <span class="function">CMyClass&amp; <span class="title">lv_Test4</span><span class="params">(*pchild)</span></span>;</span><br><span class="line">    <span class="function">CMyClass <span class="title">lv_Test5</span><span class="params">(*pchild)</span></span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;last tests&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;lv_Test3: &quot;</span> &lt;&lt; lv_Test3.<span class="built_in">getClassName</span>() &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;lv_Test4: &quot;</span> &lt;&lt; lv_Test4.<span class="built_in">getClassName</span>() &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;lv_Test5: &quot;</span> &lt;&lt; lv_Test5.<span class="built_in">getClassName</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The running result:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">get class name from parent pointer to child.</span><br><span class="line">CMyDerivedClass</span><br><span class="line">last tests</span><br><span class="line">lv_Test3: CMyDerivedClass</span><br><span class="line">lv_Test4: CMyDerivedClass</span><br><span class="line">lv_Test5: CMyClass</span><br></pre></td></tr></table></figure>
<h2 id="case-2-no-virtual-keyword-before-the-methods">Case 2: no
<code>virtual</code> keyword before the methods</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// the parent class</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CMyClass</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">// some methods</span></span><br><span class="line"></span><br><span class="line">    <span class="function">string <span class="title">getClassName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;CMyClass&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// the child class</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CMyDerivedClass</span> : <span class="keyword">public</span> CMyClass &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function">string <span class="title">getClassName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;CMyDerivedClass&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The running result:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">get class name from parent pointer to child.</span><br><span class="line">CMyClass</span><br><span class="line">last tests</span><br><span class="line">lv_Test3: CMyDerivedClass</span><br><span class="line">lv_Test4: CMyClass</span><br><span class="line">lv_Test5: CMyClass</span><br></pre></td></tr></table></figure>
<h2 id="confusion">Confusion</h2>
<p>I've been confuesd by the expression
<code>CMyClass&amp; lv_Test4(*pchild);</code> for two days. I searched
lots of keywords, copy constructor, copy initialisation, reference
initialisation, base class instantiation from devrived object ...</p>
<p>I thought it would be the same as first create an object of
<code>CMyClass</code> and then create an reference to that object.
Therefore, I tried the following code</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">CMyClass <span class="title">cp4Test6</span><span class="params">(child)</span></span>;</span><br><span class="line">CMyClass&amp; lv_Test6 = cp4Test6;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;lv_Test4: &quot;</span> &lt;&lt; lv_Test4.<span class="built_in">getClassName</span>() &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;lv_Test6: &quot;</span> &lt;&lt; lv_Test6.<span class="built_in">getClassName</span>() &lt;&lt; endl;</span><br></pre></td></tr></table></figure>
<p>Suddenly I came up an idea to check the address of <code>child</code>
and <code>lv_Test4</code> in case 1. It found out that the addresses
were the same.</p>
<p>Therefore, it just created a reference to <code>child</code>.</p>
<h2 id="virtual-override">Virtual, Override</h2>
<p><a
href="https://stackoverflow.com/questions/39932391/should-i-use-virtual-override-or-both-keywords">c++
- Should I use virtual, override, or both keywords? - Stack
Overflow</a></p>
<p>Virtual keyword marks the method in the base class virtual, and the
derived class can override the virtual method in the base class. While
the derived class does not need to use virtual keyword before the
overridden method. If used, it indicates the method can be further
overridden in the further derived class.</p>
<p>The override keyword, only used in the derived class for the method
override.</p>
]]></content>
      <categories>
        <category>programming</category>
      </categories>
  </entry>
  <entry>
    <title>C++ Miscellaneous</title>
    <url>/2022/09/30/C-Miscellaneous/</url>
    <content><![CDATA[<p>C++ is really complex, though interesting. There are many details and
I think it's not possible to remember all. This post is to record any
useful information I find about C++, and will be kept updating. If there
are topics needed to further explanation, I may write a new post
specific for that.</p>
<span id="more"></span>
<h1 id="c-pointer-and-reference">C++ pointer and reference</h1>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// create a pointer</span></span><br><span class="line"><span class="type">int</span>* pint = &amp;i;</span><br><span class="line"></span><br><span class="line"><span class="comment">// create a reference</span></span><br><span class="line"><span class="type">int</span>&amp; rint = i;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>Pointers and References are treated in the same way by the
compiler</p>
</blockquote>
<p>https://stackoverflow.com/questions/11347111/dereferencing-a-pointer-when-passing-by-reference</p>
<p>If created a reference to a variable (not a pointer), then the
address that the reference points to can't be modified, which is not
like a pointer.</p>
<h1 id="c-cast">C++ Cast</h1>
<p><a
href="https://stackoverflow.com/questions/28002/regular-cast-vs-static-cast-vs-dynamic-cast">c++
- Regular cast vs. static_cast vs. dynamic_cast - Stack Overflow</a></p>
<p>Dynamic cast: cast from base class to derived class, but there must
be at least one virtual method in the base class. If trying to cast for
incompatible classes, it fails and returns a null pointer.</p>
<p>Static cast: do not check the compatibility of classes cast (? not
sure, but the following code will run, which cast CB object into CC
object). But will check things like casting an int pointer to a char
pointer, to avoid memory error.</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">IA</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">mp_Print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;IA&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CB</span> : <span class="keyword">public</span> IA &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">mp_Print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;CB&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CC</span> : <span class="keyword">public</span> IA &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">mp_Print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;CC&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">gp_SomeFunction</span><span class="params">(IA* arg)</span> </span>&#123;</span><br><span class="line">    arg-&gt;<span class="built_in">mp_Print</span>();</span><br><span class="line">    CB* lv_pCast2CB = <span class="built_in">static_cast</span>&lt;CB*&gt;(arg);</span><br><span class="line">    <span class="keyword">if</span> (lv_pCast2CB) &#123;</span><br><span class="line">        lv_pCast2CB-&gt;<span class="built_in">mp_Print</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;null pointer&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CB lv_cb;</span><br><span class="line">    <span class="built_in">gp_SomeFunction</span>(&amp;lv_cb);</span><br><span class="line"></span><br><span class="line">    CC lv_cc;</span><br><span class="line">    <span class="built_in">gp_SomeFunction</span>(&amp;lv_cc);</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Hello World!\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="explicit-constructor">Explicit constructor</h1>
<p><a
href="https://www.geeksforgeeks.org/use-of-explicit-keyword-in-cpp/">Use
of explicit keyword in C++ - GeeksforGeeks</a> To prevent implicit type
conversion for the constructor that can be called with only one
argument</p>
<h1 id="c-standard-terms">C++ Standard Terms</h1>
<p>For this I think might be better to read some books consistent with
C++ standard terms.</p>
<p>It is the first time I know that C++ has defined some terms for OO
concepts: object, subobject, base class, derived class. Understandable
but not the same as usally used in OO programming such as superclass,
parent, child, ....</p>
<p>https://stackoverflow.com/questions/18451683/c-disambiguation-subobject-and-subclass-object</p>
]]></content>
      <categories>
        <category>programming</category>
      </categories>
  </entry>
  <entry>
    <title>Sync Between Microsoft 365 Outlook and Personal Calendar</title>
    <url>/2022/09/20/Sync-Between-Microsoft-365-Outlook-and-personal-calendar/</url>
    <content><![CDATA[<p>开始工作之后，日程安排也变得更重要了。</p>
<span id="more"></span>
<p>公司用的是企业版microsoft office
365，邮件和日历自然也就是用Outlook。但是登录都只能在公司内网，或者用VPN，想在手机上看还得用公司的iPhone（<del>还不知道咋申请</del>
后来知道了每个员工的岗位对应一个code，不同的code有不同的配置，我的话就没有配置公司的iPhone）。</p>
<p>有些私人的事情比如看医生、去市政厅之类的，也得在工作日的工作时间，所以想加一个统一的日历里，方便日程管理。</p>
<p>在Outlook的Calendar右键菜单看到了可以分享、邮件发送或者publish到WebDav。邮件发送首先可以派出了，因为不能自动同步，每次还得手动导入日程。分享也试过了，要输入分享到哪个邮箱地址，但是输入之后都提示对方的机构没有足够安全的设置所以不能分享。WebDav是我尝试了最久的，昨晚和今早都在找解决方案，Onedrive和坚果云都试过了，都没成功。</p>
<p>最后我在用webdav
calendar的关键词搜索的时候，找到了一个Outlook插件——Outlook CalDav
Synchronizer，可以同步Outlook的日历到自定义的CalDav；但是也有更简单的，同步到谷歌日历。用这个插件成功把公司的Outlook日历同步到了我的个人谷歌日历，而且是双向同步。</p>
<p>这是官网： https://caldavsynchronizer.org/</p>
<p>官网给了几个配置的教程链接，我follow的这个配置成功了，不过配置的是谷歌日历：
https://www.webdavsystem.com/server/access/caldav/ms_outlook_caldav_synchronizer/</p>
<p>这是插件项目的GitHub地址：
https://github.com/aluxnimm/outlookcaldavsynchronizer</p>
]]></content>
      <categories>
        <category>software</category>
      </categories>
  </entry>
  <entry>
    <title>口腔健康</title>
    <url>/2022/10/21/%E5%8F%A3%E8%85%94%E5%81%A5%E5%BA%B7/</url>
    <content><![CDATA[<p>七月份预约牙医排到了十月，而且智齿竟然不归牙医管。做了口腔检查之后，才从医生那知道每天只刷牙是不够的，还要至少用一次牙线。</p>
<span id="more"></span>
<p>应该是六七月的时候感觉嘴里跟平常不一样，但是具体是什么异样也描述不了，就去学校health
center看GP。第一次的医生说没看出有什么问题，给我开了一瓶杀菌的漱口水。因为提了一下智齿的问题，GP也顺便给我了看智齿的部门MKA的联系方式。因为感觉口腔的症状没有缓解，又去找GP看了第二次。这次的医生说有可能是真菌感染但是她也不确定，而且我很久没有做过口腔检查，建议我马上预约牙医做检查，也给我开了治口腔真菌感染的药（<del>其实还挺好吃的</del>）。</p>
<p>MKA的预约还算快的，预约到了七月中旬。在检查了智齿之后，医生建议我都拔掉，特别是下面横着长的两颗智齿可能伤到旁边的牙齿。但是预约手术就排到了十一月底。
口腔检查就更慢了，预约排到了十月中旬。前几天终于能去检查了，结果是口腔健康状况并不太好。之前蛀牙补过的地方要换了，还有新的蛀牙，不过蛀牙并不严重，但是地方平时刷牙就很难清洁到。牙龈也不太健康，医生建议每天都要用牙线清洁。虽然给我做了示范怎么用牙线清洁牙龈部分，但是我还是没搞懂。</p>
<p>后来上油管查了查，发现了很多口腔健康知识的视频。</p>
<p>牙线不是前后拉扯，而是在牙龈附近上下滑动。参考：https://youtu.be/IAR8VEmShfo</p>
<p>早上刷牙应该在早饭之前，如果要在饭后刷牙应该至少吃饭半小时之后。刷牙也要刷舌头。参考：https://youtu.be/FFq-2aA6m8Y</p>
<p>水牙线和普通牙线并不能互相替代，有些人可能必须要用水牙线。参考：https://youtu.be/GS-CGghGPpw</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
  </entry>
  <entry>
    <title>Cpp multi-threading exception on Windows</title>
    <url>/2023/07/23/Cpp-multi-threading-on-exception-Windows/</url>
    <content><![CDATA[<p>在工作的时候遇到了exception如果发生在std::thread里面整个程序会直接崩溃的问题。</p>
<span id="more"></span>
<h1 id="conclusion">Conclusion</h1>
<p>感觉要么自己在thread里处理好exception，或者自己包装一下thread（配合promise使用），要么用更高级的API，可以返回运行结果或者exception。</p>
<h1 id="when-exception-happens-in-a-running-stdthread">When exception
happens in a running std::thread</h1>
<p>if use std::thread, an exception occurs and not catched inside thread
&gt; If no matching handler is found, the function std::terminate() is
called &gt; https://stackoverflow.com/a/7272147 &gt;
https://en.cppreference.com/w/cpp/thread/thread</p>
<p>By default, terminate() will call abort() &gt;
https://cplusplus.com/reference/exception/terminate/</p>
<ul>
<li>cannot catch exception outside the thread where the exception
happens &gt; No you most definitely cannot catch an exception outside of
its "thread or origin". The exception catching depends on stack
unwinding, and stack is fundamentally thread-specific. &gt;
https://stackoverflow.com/a/7272147</li>
</ul>
<p>didn't find a source for "exception catching depends on stack
unwinding"</p>
<ul>
<li>use std::async instead of std::thread &gt;
https://stackoverflow.com/a/7273925 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">auto</span> run = []() -&gt; T <span class="comment">// T may be void as above</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// may throw</span></span><br><span class="line">    <span class="keyword">return</span> <span class="comment">/* some T */</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span> launched = std::<span class="built_in">async</span>(run);</span><br><span class="line"><span class="comment">// launched has type std::future&lt;T&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// may throw here; nothing bad happens</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// expression has type T and may throw</span></span><br><span class="line"><span class="comment">// will throw whatever was originally thrown in run</span></span><br><span class="line">launched.<span class="built_in">get</span>();</span><br></pre></td></tr></table></figure></li>
</ul>
<p>this way we can get the exception by <code>launched.get()</code> in
the parent thread. if not call get(), exception will be ignored (I
tested).</p>
<p>However, async() does not guarantee to use a separate thread &gt;
https://en.cppreference.com/w/cpp/thread/async</p>
<ul>
<li>maybe use std::thread with std::promise and std::future, create a
wrapper &gt; https://en.cppreference.com/w/cpp/thread/promise</li>
</ul>
<h1
id="use-threading-api-microsofts-ppl-rather-than-plain-stdthread">Use
Threading API (Microsoft's PPL) rather than plain std::thread</h1>
<blockquote>
<p>https://stackoverflow.com/a/25221591</p>
</blockquote>
<h1 id="stdasync-also-use-ppl-api">std::async also use PPL API?</h1>
<blockquote>
<p>https://stackoverflow.com/a/36914984</p>
</blockquote>
<p>This answer also says <code>concurrency::task</code> has lower
efficiency, compared to self-made thread pool with
<code>std::thread</code> and <code>std::promise</code>.</p>
<p>While, in MS document, it only says async use Windows thread pool,
and non-conforming with C++ standard</p>
<blockquote>
<p>The C++ standard states that if policy is launch::async, the function
creates a new thread. However the Microsoft implementation is currently
non-conforming. It obtains its threads from the Windows ThreadPool,
which in some cases may provide a recycled thread rather than a new one.
This means that the launch::async policy is implemented as
launch::async|launch::deferred. Another implication of the
ThreadPool-based implementation is that there's no guarantee that
thread-local variables will be destroyed when the thread completes. If
the thread is recycled and provided to a new call to async, the old
variables will still exist. We recommend that you don't use thread-local
variables with async.
https://learn.microsoft.com/en-us/cpp/standard-library/future-functions?view=msvc-170#async</p>
</blockquote>
]]></content>
      <categories>
        <category>programming</category>
      </categories>
  </entry>
  <entry>
    <title>自行车被偷了</title>
    <url>/2022/10/30/%E8%87%AA%E8%A1%8C%E8%BD%A6%E8%A2%AB%E5%81%B7%E4%BA%86/</url>
    <content><![CDATA[<p>可能是人生第一次被偷东西？啊想起来小时候的一些事，如果QQ号被盗也算的话，那应该是第一次吧……</p>
<span id="more"></span>
<p>十月初用公司的Flex Income
Plan租了一辆全新的电动自行车，还没用到半个月就被偷了。拿到了电动自行车，就把自行车卖掉了。其实自行车也是今年七月才从facebook上买的二手，当时花了130欧，卖出去100（<del>欧是不是有点太便宜了</del>）。结果就是现在没有自行车用了。</p>
<p>十月二十二号周六，那天根特有漫展，和同学一起去逛。从家骑车到火车站，就把车停在了旁边市政厅底下的自行车停车场。回来的时候就发现自行车不见了，我还在停车的位置绕了几圈，然后把整个停车场都找了一遍。碰到了一个大妈来取车，问了下她有没有可能车被人挪到别的地方，她说除了停的位置不对被警察挪走，就只可能被偷了。</p>
<p>在回去的路上就查自行车被偷了怎么报警，因为记得市中心就有个police
station，想着要不要马上过去。然而出了停车场已经是下午六点多了，police
station也已经关门了。不过在鲁汶市的网站上找到了自行车不见了的处理步骤：https://www.leuven.be/fiets-kwijt-gestolen</p>
<p>首先可以去一个网站上找找是不是被警察拿走了。如果觉得是被偷了，在警察局的网站上也有写要带什么东西去station报警。</p>
<p>等到我报警的时候已经是下一个周一了，警察跟我说车站那的停车场自行车经常被偷。虽然警察大概率找不回来车子，但是好在我是租的车，被偷了只用交点保险费，但是需要给租车公司police
report证明。</p>
<p>原来以为是会终止合同，在跟租车公司邮件沟通之后发现是他们还得等保险公司的决定，等保险赔付再给我找替代的车。这一来一回处理又过了一周。</p>
<p>现在就是等着保险公司了，不知道新车什么时候才能拿到。</p>
<h2 id="更新">2022-11-22 更新</h2>
<p>在把情况报告给租车公司过了三周左右还没得到保险情况的答复，于是又发了个邮件问了问进度。结果今天告诉我，警察报告(PV)里的chassis
number不对。我看了看，确实搞错了，报告里的chassis
number填的是自行车购买收据上的商品编号，但是chassis
number只有在租车公司的网站登录进去才能查到。所以我报警那天也没有提供，警察也没有问我。</p>
<p>结果我只能再发邮件给警察，邮件里解释了一长串，说明哪里搞错了，为什么搞错了。希望能再约时间去改chassis
number。</p>
<figure>
<img src="1689969842063_email_to_police_change_chassis_number.png"
alt="email_to_police_change_chassis_number" />
<figcaption
aria-hidden="true">email_to_police_change_chassis_number</figcaption>
</figure>
<h2 id="更新-1">2022-11-23 更新</h2>
<p>结果很快啊，警察局那边第二天就给我email了新的PV，我也马上发给了租车公司。当天下午租车公司也给我回复他们把新的PV送给保险公司了。</p>
<h2 id="更新-2">2022-12-1 更新</h2>
<p>十二月的第一天，终于收到了租车公司的合同终止通知，可还是多交了两个月的租费。我需要交的钱只是保险费用，8块3毛4。如果不租车直接当工资发下来能拿到手估计也有120欧。</p>
<p>但是我终于又可以租新车了。当天我就去之前的自行车店订了一辆和原来一样的，然而发现公司的工资系统里不能新建订单。</p>
<h2 id="更新-3">2022-12-7 更新</h2>
<p>于是又给公司HR发邮件问，得到的回复是因为到了年底要结算年终工资，系统已经锁定了所以不能新建订单。只能等来年了。</p>
<h2 id="更新-4">2023-1-16 更新</h2>
<p>这次去鲁汶环外的一个比较大的自行车店Bike
Republic挑电动车，因为想换个便宜一点的。之前的车3200，这次让店员推荐了个便宜点的，不过也要2700。下了订单之后，大概一周之内能提车。</p>
<h1 id="后记">后记</h1>
<p>2023-7-21</p>
<p>半年又过去了，现在有点后悔选了个标准大小的车。当时就想着能不能选个可折叠的小点的自行车，这样还能方便搬运，搬到家里或者火车上都行。可惜当时没有开口问。毕竟只是骑这个车上下班，来回也就十多公里，电池小点问题也不大。</p>
<p>然后就是，因为有了电动自行车，卖了自行车。但是电动车被偷之后就完全没得骑了。于是又去facebook的market和2dehands上找二手自行车。最后好像是花了八十块搞了个不太算好骑的自行车，现在想来当时还是太心急了。最近这辆自行车后胎破了，还没时间去修，好亏啊。</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
  </entry>
  <entry>
    <title>比利时驾照理论学习考试经历</title>
    <url>/2023/08/28/%E6%AF%94%E5%88%A9%E6%97%B6%E9%A9%BE%E7%85%A7%E7%90%86%E8%AE%BA%E5%AD%A6%E4%B9%A0%E8%80%83%E8%AF%95%E7%BB%8F%E5%8E%86/</url>
    <content><![CDATA[<p>2023年三月最后一天去heverlee的考点去考了理论考试，这个考点正好在公司所在的工业园。这天早上在家办公，中午的时候直接去考点，考完就去公司。</p>
<span id="more"></span>
<p>报名的时间段是12.15到12.30，实际上到了考点冷冷清清，也没有卡点要求必须什么时候进考场。我到了那，交完考试费，就直接进考场了。考场里面应该有十多台电脑，已经有两个人在考试了，我根据前台给我的电脑编号找到我的位置，就上机开始考试了。</p>
<p>耳机声音真的很大，而且如果没记错的话，音量只能调更大，不能调小。勉强在我能接受的范围的上限。</p>
<p>好像是从今年起，所有的考场都能用考试软件自带的英文翻译考试，以前的考试还得有专门的翻译员在场口译题目。虽然是选的英文翻译版本考试，但是所有的文本都还是荷兰语，第一遍朗读是荷兰语，第二遍朗读才是英语，相当于考英语听力了。</p>
<p>预约时间段只有十五分钟，但是也没人来计时，不过考试里每道题作答时间是有倒计时的。基本上按照自己的节奏做就行，我做的算比较慢，出来的时候应该已经过十二点半了。然后就是在考场外等结果。过了一会有个人又把我叫到考场里，指着一个视力表的比较上面一行（图像还蛮大的位置），问我方向。我才记起来过了之后测视力也是必要的环节。</p>
<p>虽然考的时候感觉可能做错了5分的题，但是结果出来之后还是挺好的，46/50。</p>
<p>因为打算五月回国，所以立下flag在回国之前考过理论考试。三月初开始准备，先去书店买了理论书和练习题，这就花了五十多欧。书里还有个code，可以在它们的考题网站上用一个星期。我先把理论读了一遍，然后把练习册的题做完，最后才是去网站刷题。这段时间每天下班之后就是学习交规。</p>
<p>好在最后一遍过了。当天就开始找驾校，虽然VAB好像是最有名的，不过它们已经预约到很久很久之后了。最后找了Erasmusrijschool，预约从七月开始学。</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
  </entry>
  <entry>
    <title>Android Studio: PainterResource Exception - Only VectorDrawables and rasterized asset types are supported ex. PNG, JPG</title>
    <url>/2023/09/19/Android-Studio-PainterResource-Exception-Only-VectorDrawables-and-rasterized-asset-types-are-supported-ex-PNG-JPG/</url>
    <content><![CDATA[<p>解决方法：重启Android Studio。</p>
<p>最近想学一下安卓开发，做几个自己想要的应用。上次做安卓app还是在本科毕设的时候，三年多之前了。找到了谷歌官方的安卓开发教程，就跟着做了，结果到引入图片的时候报错了。</p>
<span id="more"></span>
<p>就是在painterResource这里报错：Only VectorDrawables and rasterized
asset types are supported ex. PNG, JPG <figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">Image(</span><br><span class="line">            painter = painterResource(id = R.drawable.androidparty),</span><br><span class="line">            contentDescription = <span class="literal">null</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
反复看了几遍官方代码，并没有什么区别。</p>
<p>搜到stackoverflow里有人遇到相同的问题，重启Android Studio然后clean
build，我就试着重启了下，然后就好了，真无语。</p>
]]></content>
      <categories>
        <category>programming</category>
      </categories>
  </entry>
  <entry>
    <title>Visual Studio CMake Presets添加option</title>
    <url>/2024/05/28/Visual-Studio-CMake-Presets%E6%B7%BB%E5%8A%A0option/</url>
    <content><![CDATA[<p>今天试了试用Visual
Studio打开Qt的CMake项目，但是VS里用CMake的方式好像和Qt
Creator的不一样。</p>
<span id="more"></span>
<p>因为我的项目CMake里有一个自定义的option，在Qt的项目设置里有GUI可以设置那个option，但是在VS里找了一会没找到，而且VS好像是用cmake
presets来设置的，于是问了一下Copilot。
简单来说就是在<code>cacheVariables</code>里加上要设置的option就行了，我这里是<code>BUILD_EXAMPLE</code>。</p>
<p>之后还是得抽空学一学CMake。</p>
<p>以下是copilot的回答。 Certainly! To modify the
<code>CMakePresets.json</code> file and set the
<code>"BUILD_EXAMPLE"</code> option to <code>true</code>, follow these
steps:</p>
<ol type="1">
<li><p>Open the <code>CMakePresets.json</code> file in a text
editor.</p></li>
<li><p>Locate the appropriate configure preset where you want to set the
<code>"BUILD_EXAMPLE"</code> option. In your provided example, we have
two presets: <code>"Qt-Debug"</code> and
<code>"Qt-Release"</code>.</p></li>
<li><p>Add or modify the <code>"cacheVariables"</code> section within
the chosen configure preset. Specifically, add an entry for
<code>"BUILD_EXAMPLE"</code> with the value <code>"ON"</code> (to set it
to true). For example:</p>
<p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Qt-Debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;inherits&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Qt-Default&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;binaryDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;sourceDir&#125;/out/build&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;CMAKE_BUILD_TYPE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;CMAKE_CXX_FLAGS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-DQT_QML_DEBUG&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;BUILD_EXAMPLE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ON&quot;</span>  <span class="comment">// Add this line</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;environment&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;QML_DEBUG_ARGS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-qmljsdebugger=file:&#123;908eb81f-69af-44f1-b571-199332c0b484&#125;,block&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p></li>
<li><p>Save the modified <code>CMakePresets.json</code> file.</p></li>
</ol>
<p>Remember that <code>CMakePresets.json</code> specifies project-wide
build details, so any changes you make here will affect the entire
project. If you want to customize your local build details, consider
using <code>CMakeUserPresets.json</code> instead⁴. Make sure to follow
best practices for version control, such as ignoring
<code>CMakeUserPresets.json</code> if you're using Git.</p>
<p>Feel free to adjust other settings in the presets as needed for your
project! 😊</p>
<p>源: 与 Copilot 的对话， 2024/5/28 (1) cmake-presets(7) — CMake 3.29.3
Documentation.
https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html. (2)
CMake Presets integration in Visual Studio and Visual Studio Code.
https://devblogs.microsoft.com/cppblog/cmake-presets-integration-in-visual-studio-and-visual-studio-code/.
(3) Build and Configure CMake Projects With CMakePresets.
https://www.youtube.com/watch?v=vKUaWxemtWI. (4) Simplified CMake
Tutorial. https://www.youtube.com/watch?v=mKZ-i-UfGgQ. (5) CMake presets
| CLion Documentation - JetBrains.
https://www.jetbrains.com/help/clion/cmake-presets.html. (6) Configure
and build with CMake Presets | Microsoft Learn.
https://learn.microsoft.com/en-us/cpp/build/cmake-presets-vs?view=msvc-170.</p>
]]></content>
      <categories>
        <category>programming</category>
      </categories>
      <tags>
        <tag>CMake</tag>
      </tags>
  </entry>
  <entry>
    <title>WebDAV用到的XML的一些概念</title>
    <url>/2024/05/22/WebDAV%E7%94%A8%E5%88%B0%E7%9A%84XML%E7%9A%84%E4%B8%80%E4%BA%9B%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<p>最近在做跟WebDAV有关的个人项目，WebDAV协议里有一部分HTTP
method的body需要用到xml，就查了些不熟的概念，copy到这里放在一起方便看。</p>
<span id="more"></span>
<h1 id="xml-element">XML Element</h1>
<h2 id="what-is-an-xml-element">What is an XML Element?</h2>
<p>An XML element is everything from (including) the element's start tag
to (including) the element's end tag.<br />
<code>&lt;price&gt;29.99&lt;/price&gt;</code></p>
<p>An element can contain:</p>
<ul>
<li>text</li>
<li>attributes</li>
<li>other elements</li>
<li>or a mix of the above</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bookstore</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">book</span> <span class="attr">category</span>=<span class="string">&quot;children&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Harry Potter<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">author</span>&gt;</span>J K. Rowling<span class="tag">&lt;/<span class="name">author</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">year</span>&gt;</span>2005<span class="tag">&lt;/<span class="name">year</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">price</span>&gt;</span>29.99<span class="tag">&lt;/<span class="name">price</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">book</span> <span class="attr">category</span>=<span class="string">&quot;web&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Learning XML<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">author</span>&gt;</span>Erik T. Ray<span class="tag">&lt;/<span class="name">author</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">year</span>&gt;</span>2003<span class="tag">&lt;/<span class="name">year</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">price</span>&gt;</span>39.95<span class="tag">&lt;/<span class="name">price</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bookstore</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the example above:</p>
<p><code>&lt;title&gt;</code>, <code>&lt;author&gt;</code>,
<code>&lt;year&gt;</code>, and <code>&lt;price&gt;</code> have
<strong>text content</strong> because they contain text (like
<code>29.99</code>).</p>
<p><code>&lt;bookstore&gt;</code> and <code>&lt;book&gt;</code> have
<strong>element contents</strong>, because they contain elements.</p>
<p><code>&lt;book&gt;</code> has an <strong>attribute</strong>
(<code>category="children"</code>).</p>
<h2 id="empty-xml-elements">Empty XML Elements</h2>
<p>An element with no content is said to be empty.</p>
<p>In XML, you can indicate an empty element like this:<br />
<code>&lt;element&gt;&lt;/element&gt;</code></p>
<p>You can also use a so called self-closing tag:<br />
<code>&lt;element /&gt;</code></p>
<p>The two forms produce identical results in XML software (Readers,
Parsers, Browsers).</p>
<p>Empty elements can have attributes.</p>
<h1 id="namespace">Namespace</h1>
<h2 id="solving-the-name-conflict-using-a-prefix">Solving the Name
Conflict Using a Prefix</h2>
<p>Name conflicts in XML can easily be avoided using a name prefix.</p>
<p>This XML carries information about an HTML table, and a piece of
furniture:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h:table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h:tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h:td</span>&gt;</span>Apples<span class="tag">&lt;/<span class="name">h:td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h:td</span>&gt;</span>Bananas<span class="tag">&lt;/<span class="name">h:td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">h:tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h:table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">f:table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">f:name</span>&gt;</span>African Coffee Table<span class="tag">&lt;/<span class="name">f:name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">f:width</span>&gt;</span>80<span class="tag">&lt;/<span class="name">f:width</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">f:length</span>&gt;</span>120<span class="tag">&lt;/<span class="name">f:length</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">f:table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the example above, there will be no conflict because the two
<code>&lt;table&gt;</code> elements have different names.</p>
<h3 id="local-name">Local Name</h3>
<p>the element's actual name within the namespace, for example in
<code>&lt;h:table&gt;</code>, <code>table</code> is the local name</p>
<h2 id="xml-namespaces---the-xmlns-attribute">XML Namespaces - The xmlns
Attribute</h2>
<p>When using prefixes in XML, a namespace for the prefix must be
defined.</p>
<p>The namespace can be defined by an xmlns attribute in the start tag
of an element.</p>
<p>The namespace declaration has the following syntax.
xmlns:prefix="URI".</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h:table</span> <span class="attr">xmlns:h</span>=<span class="string">&quot;http://www.w3.org/TR/html4/&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h:tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h:td</span>&gt;</span>Apples<span class="tag">&lt;/<span class="name">h:td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h:td</span>&gt;</span>Bananas<span class="tag">&lt;/<span class="name">h:td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">h:tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h:table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">f:table</span> <span class="attr">xmlns:f</span>=<span class="string">&quot;https://www.w3schools.com/furniture&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">f:name</span>&gt;</span>African Coffee Table<span class="tag">&lt;/<span class="name">f:name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">f:width</span>&gt;</span>80<span class="tag">&lt;/<span class="name">f:width</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">f:length</span>&gt;</span>120<span class="tag">&lt;/<span class="name">f:length</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">f:table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the example above:</p>
<p>The xmlns attribute in the first <code>&lt;table&gt;</code> element
gives the <code>h:</code> prefix a qualified namespace.</p>
<p>The xmlns attribute in the second <code>&lt;table&gt;</code> element
gives the <code>f:</code> prefix a qualified namespace.</p>
<p>When a namespace is defined for an element, all child elements with
the same prefix are associated with the same namespace.</p>
<p>Namespaces can also be declared in the XML root element:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span> <span class="attr">xmlns:h</span>=<span class="string">&quot;http://www.w3.org/TR/html4/&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:f</span>=<span class="string">&quot;https://www.w3schools.com/furniture&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h:table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h:tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h:td</span>&gt;</span>Apples<span class="tag">&lt;/<span class="name">h:td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h:td</span>&gt;</span>Bananas<span class="tag">&lt;/<span class="name">h:td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">h:tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h:table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">f:table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">f:name</span>&gt;</span>African Coffee Table<span class="tag">&lt;/<span class="name">f:name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">f:width</span>&gt;</span>80<span class="tag">&lt;/<span class="name">f:width</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">f:length</span>&gt;</span>120<span class="tag">&lt;/<span class="name">f:length</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">f:table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Note: The namespace URI <strong>is not used by the parser to look up
information</strong>.</p>
<p>The purpose of using an URI is to give the namespace a unique
name.</p>
<p>However, companies often use the namespace as a pointer to a web page
containing namespace information.</p>
<h2 id="uniform-resource-identifier-uri">Uniform Resource Identifier
(URI)</h2>
<p>A Uniform Resource Identifier (URI) is a string of characters which
identifies an Internet Resource.</p>
<p>The most common URI is the Uniform Resource Locator (URL) which
identifies an Internet domain address. Another, not so common type of
URI is the Uniform Resource Name (URN).</p>
<h2 id="default-namespaces">Default Namespaces</h2>
<p>Defining a default namespace for an element saves us from using
prefixes in all the child elements. It has the following syntax:<br />
<code>xmlns="namespaceURI"</code></p>
<p>This XML carries HTML table information:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/TR/html4/&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Apples<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Bananas<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This XML carries information about a piece of furniture:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">xmlns</span>=<span class="string">&quot;https://www.w3schools.com/furniture&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>African Coffee Table<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">width</span>&gt;</span>80<span class="tag">&lt;/<span class="name">width</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">length</span>&gt;</span>120<span class="tag">&lt;/<span class="name">length</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span> </span><br></pre></td></tr></table></figure>
<p>copy from: https://www.w3schools.com/</p>
]]></content>
      <categories>
        <category>programming</category>
      </categories>
      <tags>
        <tag>XML</tag>
      </tags>
  </entry>
  <entry>
    <title>在Item View里画一个checkbox并能改变勾选状态 - subclassing QStyledItemDelegate</title>
    <url>/2024/06/03/%E5%9C%A8Item-View%E9%87%8C%E7%94%BB%E4%B8%80%E4%B8%AAcheckbox%E5%B9%B6%E8%83%BD%E6%94%B9%E5%8F%98%E5%8B%BE%E9%80%89%E7%8A%B6%E6%80%81-subclassing-QStyledItemDelegate/</url>
    <content><![CDATA[<p>最近在用Qt做一个hobby project，类似Microsoft Todo的任务清单。</p>
<span id="more"></span>
<p>最初就是用QListView，QStandardItemModel，QStandardItem，和默认使用的QStyledItemDelegate。如果每个只是显示任务名字和一个checkbox的话，这些确实足够了。</p>
<p>但是还想在item
view里显示截止日期和提醒时间，上面的就不够了。想自定义item
view的话，就得自建一个QStyledItemDelegate的子类，重新实现paint方法了。
<code>void paint(QPainter *painter, const QStyleOptionViewItem &amp;option, const QModelIndex &amp;index) const</code></p>
<p>感觉官方也没有给这个方法详细的解释和例子，搜到的很多也只是画了单纯的图片和文字，没有像checkbox这样的控件。</p>
<p>这个方法里最让我搞不懂的就是<code>option</code>。好像都是基于<code>option.rect</code>来画出自定义的界面。后来通过debug打印出来rect的size和position，才搞懂一些。</p>
<p><code>paint</code>方法有还有个<code>index</code>参数，而<code>option</code>也对应了这个<code>index</code>的item，每个<code>option.rect</code>的位置是对应了<code>index</code>的item在QListView里显示的位置。</p>
<p>然后就是不同类型的<code>option</code>，比如<code>paint</code>方法参数的option是<code>QStyleOptionViewItem</code>类型，对应的是item
view。而如果我要在item
view上画一个checkbox，那这个checkbox需要另建一个类型为<code>QStyleOptionButton</code>的实例，比如把这个实例命名为<code>checkBoxOpt</code>。那么<code>checkBoxOpt.rect</code>的位置应该根据<code>option.rect</code>的位置来设定。</p>
<p>下面就是我在paint方法里用来画checkbox的代码，这里还包括了通过index获得该item的<code>TaskCompleteRole</code>数据，表示这个task是否已经完成，并由此设定该item的checkbox是否被勾选。
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Draw checkbox</span></span><br><span class="line">QStyleOptionButton checkBoxOpt;</span><br><span class="line">checkBoxOpt.rect = <span class="built_in">createCheckBoxRect</span>(option, checkBoxOpt);</span><br><span class="line">checkBoxOpt.state = QStyle::State_Enabled;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> isChecked = index.<span class="built_in">data</span>(TaskCompleteRole).<span class="built_in">toBool</span>();</span><br><span class="line"><span class="keyword">if</span> (isChecked)</span><br><span class="line">&#123;</span><br><span class="line">    checkBoxOpt.state |= QStyle::State_On;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    checkBoxOpt.state |= QStyle::State_Off;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">QApplication::<span class="built_in">style</span>()-&gt;<span class="built_in">drawControl</span>(QStyle::CE_CheckBox, &amp;checkBoxOpt, painter);</span><br></pre></td></tr></table></figure>
<code>createCheckBoxRect</code>是用来确定checkbox的rect的位置，这个方法在之后改变checkbox状态的时候也用到。
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">QRect <span class="title">TaskViewDelegate::createCheckBoxRect</span><span class="params">(<span class="type">const</span> QStyleOptionViewItem&amp; option, <span class="type">const</span> QStyleOptionButton&amp; checkBoxOpt)</span> <span class="type">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QSize checkBoxSize = QApplication::<span class="built_in">style</span>()-&gt;<span class="built_in">sizeFromContents</span>(QStyle::CT_CheckBox, &amp;checkBoxOpt, <span class="built_in">QSize</span>());</span><br><span class="line">    <span class="type">int</span> checkBoxRectTopLeftY = option.rect.<span class="built_in">topLeft</span>().<span class="built_in">y</span>() + option.rect.<span class="built_in">height</span>() / <span class="number">2</span> - checkBoxSize.<span class="built_in">height</span>() / <span class="number">2</span>;</span><br><span class="line">    <span class="function">QPoint <span class="title">checkBoxRectTopLeft</span><span class="params">(<span class="number">0</span>, checkBoxRectTopLeftY)</span></span>;</span><br><span class="line">    <span class="function">QRect <span class="title">checkBoxRect</span><span class="params">(checkBoxRectTopLeft, checkBoxSize)</span></span>;    <span class="comment">// checkBoxRect&#x27;s position should be related to the option of each item,</span></span><br><span class="line">                                                                <span class="comment">// not a fixed value, otherwise all the check box is at the same position</span></span><br><span class="line">    <span class="keyword">return</span> checkBoxRect;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>现在可以在item
view里画出来一个checkbox了，但是怎么让checkbox被点击之后能被勾选或者取消勾选呢。参考StackOverflow的一个问答，需要重新实现<code>QStyledItemDelegate</code>的<code>editorEvent</code>方法
<code>bool editorEvent(QEvent* event, QAbstractItemModel* model, const QStyleOptionViewItem&amp; option, const QModelIndex&amp; index)</code></p>
<p>通过检测鼠标点击事件并且点击区域限定在checkbox的rect位置内，来更新该item的<code>TaskCompleteRole</code>的数据
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">TaskViewDelegate::editorEvent</span><span class="params">(QEvent* event, QAbstractItemModel* model, <span class="type">const</span> QStyleOptionViewItem&amp; option, <span class="type">const</span> QModelIndex&amp; index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event-&gt;<span class="built_in">type</span>() == QEvent::MouseButtonRelease)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;editorEvent: option.rect.size()&quot;</span> &lt;&lt; option.rect.<span class="built_in">size</span>();</span><br><span class="line">        QMouseEvent* pME = <span class="built_in">static_cast</span>&lt;QMouseEvent*&gt;(event);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;pME-&gt;pos()&quot;</span> &lt;&lt; pME-&gt;<span class="built_in">pos</span>();</span><br><span class="line">        QStyleOptionButton checkBoxOpt;</span><br><span class="line">        QRect checkBoxRec = <span class="built_in">createCheckBoxRect</span>(option, checkBoxOpt);</span><br><span class="line">        <span class="keyword">if</span> (checkBoxRec.<span class="built_in">contains</span>(pME-&gt;<span class="built_in">pos</span>()))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">bool</span> value = index.<span class="built_in">data</span>(TaskCompleteRole).<span class="built_in">toBool</span>();</span><br><span class="line">            model-&gt;<span class="built_in">setData</span>(index, !value, TaskCompleteRole);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> QStyledItemDelegate::<span class="built_in">editorEvent</span>(event, model, option, index);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>下面这两个个例子给了我很大启发。</p>
<p>自定义的item view里checkbox改变状态
https://stackoverflow.com/questions/36778577/qstyleditemdelegate-how-to-make-checkbox-button-to-change-its-state-on-click</p>
<p>在QListView里展示自定义wedget
https://stackoverflow.com/questions/53105343/is-it-possible-to-add-a-custom-widget-into-a-qlistview</p>
]]></content>
      <categories>
        <category>programming</category>
      </categories>
      <tags>
        <tag>Qt</tag>
      </tags>
  </entry>
  <entry>
    <title>Multivariate derivative chain rule with vector or matrix, in Machine Learning</title>
    <url>/2024/06/30/Multivariate-derivative-chain-rule-with-vector-or-matrix-in-Machine-Learning/</url>
    <content><![CDATA[<p>阅前提醒： - 本文可能使用了大量比较随便的英文表达； -
本文的数学名词、公式可能不严谨； - 总之意思传达到就行。</p>
<p>While doing the lab <code>Backpropogation</code> from week 3 of <a
href="https://www.coursera.org/learn/multivariate-calculus-machine-learning?specialization=mathematics-machine-learning">Math
for ML course</a>, some questions poped up in my mind.</p>
<span id="more"></span>
<h1 id="some-background">Some background</h1>
<figure>
<img src="pic_1719776941118.png" alt="picture 0" />
<figcaption aria-hidden="true">picture 0</figcaption>
</figure>
<figure>
<img src="pic_1719776957370.png" alt="picture 1" />
<figcaption aria-hidden="true">picture 1</figcaption>
</figure>
<p><span class="math inline">\(\boldsymbol{a}^{(L)}\)</span> is the
values of the nodes at layer L. <span
class="math inline">\(\boldsymbol{a}^{(L)} = [a_0^{(L)}, a_1^{(L)},
\dots, a_{m-1}^{(L)}]\)</span>, where <code>m</code> is the number of
nodes at layer <code>L</code>.</p>
<p><span class="math inline">\(z^{(L)}\)</span> is the values before
passing to activation function, just a trick to make the derivation of
the activation function easier.</p>
<p><span class="math inline">\(\boldsymbol{W}^{(L)}\)</span> is the
weight from layer <code>L-1</code> to layer <code>L</code>, and <span
class="math inline">\(\boldsymbol{b}^{(L)}\)</span> is the bias from
layer L-1 to Layer 1.</p>
<p><span class="math inline">\(\sigma\)</span> is some activation
function.</p>
<p><span class="math inline">\(C\)</span> is the cost function, <span
class="math inline">\(y_i\)</span> is the truth value in the dataset for
training the network, corresponding to a input <span
class="math inline">\(a_i^{(0)}\)</span></p>
<p>What we want to do is to find good <span
class="math inline">\(\boldsymbol{W}^{(L)}\)</span> and <span
class="math inline">\(\boldsymbol{b}^{(L)}\)</span> that minimize the
cost, and for that we need to take partial derivative of <span
class="math inline">\(C\)</span> with respect to each W and b.</p>
<h1 id="questions">Questions</h1>
<p>In the lab <code>Backpropogation</code>, I doubted a partial
derivative formula: <span class="math display">\[
\frac{\partial C}{\partial \boldsymbol{W}^{(3)}} = \frac{\partial
C}{\partial \boldsymbol{a}^{(3)}} \frac{\partial
\boldsymbol{a}^{(3)}}{\partial \boldsymbol{z}^{(3)}} \frac{\partial
\boldsymbol{z}^{(3)}}{\partial \boldsymbol{W}^{(3)}}
\]</span></p>
<ol type="1">
<li>Why we can take partial derivative of <span
class="math inline">\(C\)</span> with respect to <span
class="math inline">\(\boldsymbol{W}\)</span>?</li>
<li>In the cost function, it sums the squre of <span
class="math inline">\(a_i^{(L)} - y_i\)</span>, why in the derivative
formula it becomes the partial derivative of <span
class="math inline">\(C\)</span> with respect to <span
class="math inline">\(\boldsymbol{a}\)</span>, and how?</li>
</ol>
<h1 id="analysis">Analysis</h1>
<p>In the previous lectures, I've learned about chain rule for
multivariate derivative with function being like this form: <span
class="math display">\[
f(\boldsymbol{x}(t)), \boldsymbol{x} = [x_1(t), x_2(t), ... x_n(t)]
\]</span></p>
<p><span class="math inline">\(f\)</span> is a function of <span
class="math inline">\(x_1(t), x_2(t), ... x_n(t)\)</span>, and each
elements of <span class="math inline">\(\boldsymbol{x}\)</span> is a
function of <span class="math inline">\(t\)</span>, and in the end,
<span class="math inline">\(f\)</span> can be a function of <span
class="math inline">\(t\)</span>. Thus, we can try to find derivative of
<span class="math inline">\(f\)</span> with respect to <span
class="math inline">\(t\)</span>, by using multivariate chain rule:</p>
<p><strong>Equation 1</strong> <span class="math display">\[
\frac{df}{dt} = \frac{\partial f}{\partial \boldsymbol{x}}
\frac{d\boldsymbol{x}}{dt}
\]</span></p>
<p><strong>Equation 2</strong> <span class="math display">\[
\frac{df}{dt} = \frac{\partial f}{\partial x_1} \frac{dx_1}{dt} +
\frac{\partial f}{\partial x_2} \frac{dx_2}{dt} + \dots + \frac{\partial
f}{\partial x_n} \frac{dx_n}{dt}
\]</span></p>
<p>The <span class="math inline">\(\frac{\partial f}{\partial
\boldsymbol{x}}\)</span> and <span
class="math inline">\(\frac{d\boldsymbol{x}}{dt}\)</span> in Equation 1
are vectors, and <span class="math inline">\(\frac{df}{dt}\)</span> is
the <strong>dot product</strong> of these two vectors. The result of dot
product just equals to the sum Equation 2. Therefore, we can use the
simple form Equation 1.</p>
<p>The independent variable <span class="math inline">\(t\)</span> is a
single variable. However, what would the formula be if <span
class="math inline">\(t\)</span> is also a pack of variables? e.g.:
<span class="math display">\[
\boldsymbol{t} = [t_1, t_2]
\]</span></p>
<p>To make it easier for understanding, we can use an example, say <span
class="math inline">\(\boldsymbol{x} = [x_1, x_2]\)</span>, and <span
class="math inline">\(\boldsymbol{t} = [t_1, t_2]\)</span>, <span
class="math inline">\(f\)</span> is a function of <span
class="math inline">\(\boldsymbol{x}\)</span>, <span
class="math inline">\(f(\boldsymbol{x})\)</span>, (or explicitly <span
class="math inline">\(f(x_1, x_2)\)</span>, and each element in <span
class="math inline">\(\boldsymbol{x}\)</span> is a function of <span
class="math inline">\(\boldsymbol{t}\)</span>: <span
class="math display">\[
x = [x_1(\boldsymbol{t}), x_2(\boldsymbol{t})]
\]</span></p>
<p>or explicitly <span class="math display">\[
x = [x_1(t_1, t_2), x_2(t_1, t_2)]
\]</span></p>
<p>So, <span class="math inline">\(f\)</span> can be a function of <span
class="math inline">\(t_1\)</span> and <span
class="math inline">\(t_2\)</span>. Now, if we want to find derivative
of <span class="math inline">\(f\)</span> with respect to <span
class="math inline">\(\boldsymbol{t}\)</span>, we have to do partial
defferentiation on <span class="math inline">\(t_1\)</span> and <span
class="math inline">\(t_2\)</span> respectively: <span
class="math display">\[
\frac{\partial f}{\partial t_1} = \frac{\partial f}{\partial
x_1}\frac{\partial x_1}{\partial t_1} + \frac{\partial f}{\partial
x_2}\frac{\partial x_2}{\partial t_1}
\]</span></p>
<p>It can be written as dot product of vector <span
class="math display">\[
\frac{\partial f}{\partial \boldsymbol{x}} = [\frac{\partial f}{\partial
x_1}, \frac{\partial f}{\partial x_2}]
\]</span></p>
<p>and vector <span class="math display">\[
\frac{\partial \boldsymbol{x}}{\partial t_1} = [\frac{\partial
x_1}{\partial t_1}, \frac{\partial x_2}{\partial t_1}]
\]</span></p>
<p>Thus, <span class="math display">\[
\frac{\partial f}{\partial t_1} = \frac{\partial f}{\partial
\boldsymbol{x}}\frac{\partial \boldsymbol{x}}{\partial t_1}
\]</span></p>
<p>And similarly for <span class="math inline">\(t_2\)</span> <span
class="math display">\[
\frac{\partial f}{\partial t_2} = \frac{\partial f}{\partial
\boldsymbol{x}}\frac{\partial \boldsymbol{x}}{\partial t_2}
\]</span> Until here, we can roughly answer a part of the question
1:</p>
<p><span class="math inline">\(C\)</span> is a function of <span
class="math inline">\(\boldsymbol{a}^{(L)}\)</span>, and <span
class="math inline">\(\boldsymbol{a}^{(L)}\)</span> is a function of
<span class="math inline">\(\boldsymbol{W}^{(L)}\)</span> and <span
class="math inline">\(\boldsymbol{b}^{(L)}\)</span>. Therefore, <span
class="math inline">\(C\)</span> can also be a function of <span
class="math inline">\(\boldsymbol{W}^{(L)}\)</span> and <span
class="math inline">\(\boldsymbol{b}^{(L)}\)</span>.</p>
<p>Just like above example(<span class="math inline">\(f\)</span>, <span
class="math inline">\(t_1\)</span>, and <span
class="math inline">\(t_2\)</span>), we can take partial derivative of
<span class="math inline">\(C\)</span> with respective <span
class="math inline">\(\boldsymbol{W}^{(L)}\)</span> and <span
class="math inline">\(\boldsymbol{b}^{(L)}\)</span>.</p>
<p>However, there is new question:</p>
<p><span class="math inline">\(\boldsymbol{W}^{(L)}\)</span> is a
matrix, how do we take derivative with respect to a matrix?</p>
<h2
id="key-point-derivative-with-respect-to-each-element-in-matrixvector">Key
point: derivative with respect to each element in matrix/vector</h2>
<p>My idea is that, this is just a simpler form for writing. We can't
take derivative with respect to a matrix or vector, but we actually do
that on <strong>each element</strong> in the matrix or vector.</p>
<p>For the above example <span class="math inline">\(f\)</span>, <span
class="math inline">\(t_1\)</span>, and <span
class="math inline">\(t_2\)</span>, we can also put <span
class="math inline">\(\frac{\partial f}{\partial t_1}\)</span> and <span
class="math inline">\(\frac{\partial f}{\partial t_2}\)</span> together
in a vector, and write: <span class="math display">\[
\frac{\partial f}{\partial \boldsymbol{t}} = [\frac{\partial f}{\partial
t_1}, \frac{\partial f}{\partial t_2}]
\]</span></p>
<h1 id="answer-to-the-question">Answer to the question</h1>
<p><span class="math inline">\(C\)</span> is a function of <span
class="math inline">\(\boldsymbol{a}^{(L)} = [a_0^{(L)}, a_1^{(L)},
\dots, a_{m-1}^{(L)}]\)</span>.</p>
<p>Each <span class="math inline">\(a_i^{(L)}\)</span> is a function of
<span class="math inline">\(\boldsymbol{w}_i^{(L)} = [w_{i,0}^{(L)},
w_{i,1}^{(L)}, \dots, w_{i,n-1}^{(L)}]\)</span> and <span
class="math inline">\(b_i^{(L)}\)</span>. <code>n</code> is the number
of nodes in the layer <code>L-1</code>.</p>
<p>We, in fact, are not taking derivative of <span
class="math inline">\(C\)</span> with respect to the matrix <span
class="math inline">\(\boldsymbol{W}^{(L)}\)</span>, but to each
variable <span class="math inline">\(w_{i,j}^{(L)}\)</span>, while in
the end, writing the result as simpler form <span
class="math inline">\(\frac{\partial C}{\partial
\boldsymbol{W}^{(L)}}\)</span>.</p>
<p>Same for <span class="math inline">\(\frac{\partial C}{\partial
\boldsymbol{a}^{(L)}}\)</span>, we need to take derivative of <span
class="math inline">\(C\)</span> with respect to each variable <span
class="math inline">\(a_i^{(L)}\)</span>, and in the end write as a
simpler form.</p>
<p>So let's start by doing derivative of <span
class="math inline">\(z_i^{(L)}\)</span> with respect to <span
class="math inline">\(\boldsymbol{w}_i^{(L)}\)</span>.</p>
<p>Expan the formula <span class="math inline">\(z_i^{(L)} =
\boldsymbol{w}_i^{(L)} \cdot \boldsymbol{a}^{(L-1)} +
b_i^{(L)}\)</span>: <span class="math display">\[
z_i^{(L)} = [w_{i,0}^{(L)}, w_{i,1}^{(L)}, \dots, w_{i,n-1}^{(L)}] \cdot
[a_0^{(L-1)}, a_1^{(L-1)}, \dots, a_{n-1}^{(L-1)}] + b_i^{(L)}
\]</span></p>
<p>We can easily get the result of taking derivative of <span
class="math inline">\(z_i\)</span> with respect to <span
class="math inline">\(w_{i,j}^{(L)}\)</span>, it's just <span
class="math inline">\(a_j^{(L-1)}\)</span>. But let's keep these
derivative symbols (since the result is not important for our topic) and
put all the derivatives in a vector:</p>
<p><strong>Equation 3</strong> <span class="math display">\[
\frac{\partial z_i^{(L)}}{\partial \boldsymbol{w}_i^{(L)}} =
[\frac{\partial z_i^{(L)}}{\partial w_{i, 0}^{(L)}}, \frac{\partial
z_i^{(L)}}{\partial w_{i, 1}^{(L)}}, \cdots, \frac{\partial
z_i^{(L)}}{\partial w_{i, n-1}^{(L)}}]
\]</span></p>
<p>And then we take derivative of <span
class="math inline">\(a_i^{(L)}\)</span> with respect to <span
class="math inline">\(z_i^{(L)}\)</span>: <span class="math display">\[
\frac{\partial a_i^{(L)}}{\partial z_i^{(L)}} =
\sigma^{\prime}(z_i^{(L)})
\]</span></p>
<p>Then we do <span class="math inline">\(\frac{\partial C}{\partial
a_i^{(L)}}\)</span>. Remember that: <span class="math display">\[
C = \sum_i (a_i^{(L)} - y_i)^2 = (a_0^{(L)} - y_0)^2 + (a_1^{(L)} -
y_1)^2 + \cdots + (a_{m-1}^{(L)} - y_{m-1})^2
\]</span></p>
<p>We only take derivative with respect to <span
class="math inline">\(a_i^{(L)}\)</span>: <span class="math display">\[
\frac{\partial C}{\partial a_i^{(L)}} = 2(a_i^{(L)} - y_i)
\]</span></p>
<p>At last, we can get partial derivative of <span
class="math inline">\(C\)</span> respect to each <span
class="math inline">\(w_{i,j}^{(L)}\)</span> <span
class="math display">\[
\frac{\partial C}{\partial w_{i,j}^{(L)}} = \frac{\partial C}{\partial
a_i^{(L)}}\frac{\partial a_i^{(L)}}{\partial z_i^{(L)}}\frac{\partial
z_i^{(L)}}{\partial w_{i,j}^{(L)}}
\]</span></p>
<p>All the derivative term <span class="math inline">\(\frac{\partial
C}{\partial a_i^{(L)}}\)</span>, <span
class="math inline">\(\frac{\partial a_i^{(L)}}{\partial
z_i^{(L)}}\)</span>, <span class="math inline">\(\frac{\partial
z_i^{(L)}}{\partial w_{i,j}^{(L)}}\)</span>, are just scalars, so is the
result <span class="math inline">\(\frac{\partial C}{\partial
w_{i,j}^{(L)}}\)</span>.</p>
<p>Now, what if we replace the single variable <span
class="math inline">\(w_{i,j}^{(L)}\)</span> with a vector <span
class="math inline">\(\boldsymbol{w}_i^{(L)}\)</span>?</p>
<p>Then the last term becomes the <strong>Equation 3</strong>. It is a
vector! The first and second term doesn't change, because we still take
derivative with respect to <span
class="math inline">\(a_i^{(L)}\)</span> and <span
class="math inline">\(z_i^{(L)}\)</span>.</p>
<p>So what happens to <span class="math inline">\(\frac{\partial
C}{\partial w_{i,j}^{(L)}}\)</span>? It also turns to a vector! <span
class="math display">\[
\frac{\partial C}{\partial \boldsymbol{w}_i^{(L)}} = [ \frac{\partial
C}{\partial w_{i,0}^{(L)}}, \frac{\partial C}{\partial w_{i,1}^{(L)}},
\cdots, \frac{\partial C}{\partial w_{i, n-1}^{(L)}} ]
\]</span></p>
<p>What is <span class="math inline">\(\boldsymbol{w}_i^{(L)}\)</span>?
It is the <code>i</code>th row of the matrix <span
class="math inline">\(\boldsymbol{W}^{(L)}\)</span>. If we then do
similar things to each row of <span
class="math inline">\(\boldsymbol{W}^{(L)}\)</span>, and stack them
together, we get a new matrix, that is <span
class="math inline">\(\frac{\partial C}{\partial
\boldsymbol{W}^{(L)}}\)</span>! <span class="math display">\[
\frac{\partial C}{\partial \boldsymbol{W}^{(L)}} =
\begin{bmatrix}
   \frac{\partial C}{\partial \boldsymbol{w}_0^{(L)}}  \\
   \frac{\partial C}{\partial \boldsymbol{w}_1^{(L)}}  \\
   \vdots \\
   \frac{\partial C}{\partial \boldsymbol{w}_{m-1}^{(L)}}
\end{bmatrix}
\]</span></p>
<h1 id="take-away">Take away</h1>
<p>When there is vector or matrix in a derivative formula, we are taking
derivative with respect to each element in matrix or vector.</p>
]]></content>
      <categories>
        <category>machine learning</category>
      </categories>
      <tags>
        <tag>math</tag>
      </tags>
  </entry>
</search>
